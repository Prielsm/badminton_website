// -----------------------------------------------------------------------------
// Variables
// -----------------------------------------------------------------------------

// Media Queries
// -----------------------------------------------------------------------------
/// Breakpoints
$breakpoints: (
  min: (
    min: 320px,
    max: none,
  ),
  xs: (
    min: none,
    max: 663px,
  ),
  sm: (
    min: 664px,
    max: 997px,
  ),
  md: (
    min: 998px,
    max: 1329px,
  ),
  lg: (
    min: 1330px,
    max: none,
  ),
  max: (
    min: none,
    max: 1920px,
  ),
);

// Colors
// -----------------------------------------------------------------------------
@function colors($name, $shade: "base") {
  $color-map: map-get($colors, $name);

  @if type-of($color-map) == "map" {
    @return map-get($color-map, $shade);
  } @else {
    @return $color-map;
  }
}

$colors: (
  // primary:                         #57B6E1,
  primary:
    (
      base: #57b6e1,
      light: #8ec7e1,
      lighter: #d3dee3,
    ),
  secondary: #e98a15,
  white: #fafafa,
  grey: #878a96,
  dark: #0c1b33,
  black: #0000
);

// Font
// Font, line-height, and color for body text, headings, and more.
// -----------------------------------------------------------------------------
@font-face {
  font-family: Lato;
  src: url(../../public/fonts/Lato/Lato-Regular.ttf);
}
@font-face {
  font-family: Baskervville;
  src: url(../../public/fonts/Baskervville/Baskervville-Regular.ttf);
}
// Base font family
$font-family-base: "Lato", sans-serif;
// Title font family
$font-family-title: "Baskervville", serif;

@function font-size($size) {
  @return map-get($font-size, $size);
}
// Font size
$font-size: (
  section: 3rem,
  h1: 2.5rem,
  h2: 2rem,
  h3: 1.7rem,
  h4: 1.5rem,
  h5: 1.2rem,
  h6: 1.1rem,
  aside: 0.9rem,
  base: 1rem,
  small: 0.75rem,
  extrasmall: 0.6rem,
  article: 1.15rem,
  article-xs: 1.1rem,
  alt: 1rem,
  nav: 0.9rem,
  button: 0.9rem,
  icon: 0.7rem,
);

// Line height
$line-height: (
  base: 1.4,
  h1: 1.2,
  h2: 1.35,
  h3: 1.35,
  h4: 1.35,
  h5: 1.35,
  h6: 1.35,
  alt: 1.35,
  nav: 28px,
  small: 1.3,
);

// Font weight
$font-weight: (
  base: 400,
  h1: 700,
  h2: 300,
  h3: 300,
  h4: 300,
  h5: 300,
  h6: 300,
  alt: 300,
  nav: 300,
  small: 300,
);

// z-index
$z-index: (
  base: 1,
  low: 50,
  medium: 100,
  high: 150,
);

// Grids
// -----------------------------------------------------------------------------
$html-max-width: 1920px;
$content-max-width: 1328px;
$arche-width: 996px;

$header-desktop-height: 279px;
$header-desktop-top-height: 80px;
$header-desktop-bottom-height: 35px;

$header-height: 234px;
$header-top-height: 50px;
$header-bottom-height: 35px;

// -----------------------------------------------------------------------------
// Mixins
// -----------------------------------------------------------------------------

// Media Queries
// -----------------------------------------------------------------------------
@mixin media-query($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 576px) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (min-width: 577px) and (max-width: 768px) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: 769px) {
      @content;
    }
  }
  // Ajoutez d'autres breakpoints au besoin
}

// Global
// -----------------------------------------------------------------------------
// Mixin pour cacher un élément
@mixin hide {
  display: none !important;
}

// Mixin pour centrer horizontalement et verticalement un élément
@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mixin pour le texte tronqué (ellipsis) avec une largeur fixe
@mixin text-ellipsis($width) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $width;
}

// Mixin pour l'animation de transition
@mixin transition($properties, $duration: 0.3s, $timing-function: ease) {
  transition: $properties $duration $timing-function;
}

// Mixin pour ajouter une ombre
@mixin box-shadow($shadow) {
  box-shadow: $shadow;
}

// Mixin pour définir une couleur de fond avec opacité
@mixin background-color-opacity($color, $opacity) {
  background-color: rgba($color, $opacity);
}

// Mixin pour ajouter une bordure arrondie
@mixin border-radius($radius) {
  border-radius: $radius;
}

// Exemple d'intégration
// -----------------------------------------------------------------------------
// .my-element {
//   @include media-query(phone) {
//     /* Styles spécifiques pour les smartphones */
//   }

//   @include center; /* Centre l'élément */
//   @include text-ellipsis(150px); /* Texte tronqué avec une largeur de 150px */
//   @include transition(all); /* Animation de transition pour tous les changements de style */
//   @include box-shadow(0 4px 6px rgba(0, 0, 0, 0.1)); /* Ajoute une ombre */
//   @include background-color-opacity(#3498db, 0.5); /* Fond avec opacité */
//   @include border-radius(10px); /* Ajoute une bordure arrondie */
// }
